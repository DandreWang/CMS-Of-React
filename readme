样式必须使用class
使用非class时，必须将其包含在某个局部class中

例子a、
.example{
  a{

  }
}
example被编译成example_exzdDA 。不同文件中，example将附加不同的hash（比如"exzdDA"），保证了唯一性，不会彼此覆盖。

例子b、
table tr{} 影响整个网站，因编译后，不附加hash。
------------------------------------------------------------------------------------------------------------------------
自定义的类，比如ziDingYi，做为最外层时，禁止放在:global中。
因为放在global中的类，不会被编译成唯一的类。
"不好的"例子:
:global{
  .ziDingYi{
    .ant-row{

    }
  }
}
***不过也有例外：
const columns = [
{
title: '操作',
className: 'tabTool'
}
];

<Table columns={columns}></Table>
现状：build后，类名仍为tabTool；
期望：tabTool被转成xxx-tabTool-yyy，以保证全局唯一。
方案：见Scale/Office/List.less

------------------------------------------------------------------------------------------------------------------------
样式应写在less文件中，而不是在render中定义变量
"不好的"例子：
render() {
   const radioStyle = {
      padding:'16px 20%',
    };
    return (<div className={radioStyle}></div>)
 }
------------------------------------------------------------------------------------------------------------------------
禁止使用属性选择器，比如a、span等
------------------------------------------------------------------------------------------------------------------------
现阶段，响应式设计，考虑md和lg下的占用空间即可。 如果md和lg下无区别，可不做区分。
------------------------------------------------------------------------------------------------------------------------
禁止直接修改官方组件。
原因是多人协作开发时，他人不知道官方组件已被修改，会导致非预期后果。
可以复制后使用。
比如官方组件SiderMenu，我们复制后，命名为SiderMenuDiy。
需要再次定制时，命令为SiderMenuDiy2，以此类推。
------------------------------------------------------------------------------------------------------------------------
自定义组件时，组件文件夹的名字中需包含Diy，比如SliderDiy
------------------------------------------------------------------------------------------------------------------------
所有图片，需在utils/images.js中定义后再使用
使用图片时，import {images} from '../../utils/images';
------------------------------------------------------------------------------------------------------------------------
本地开发、发布到我的阿里云
需编辑.webpackrc.js

本地开发：执行start或start:no-proxy
发布：执行build，将生成dist目录
部署：将dist目录内容放到静态服务器上
------------------------------------------------------------------------------------------------------------------------
dataHandler.js 关于数据处理，比如字符串、数组、对象的解析
------------------------------------------------------------------------------------------------------------------------
ajax请求放在componentDidMount中
------------------------------------------------------------------------------------------------------------------------
图标bar的颜色设置
https://github.com/alibaba/BizCharts/blob/master/doc/api/geom.md
------------------------------------------------------------------------------------------------------------------------
开始开发
npm install -g yarn
在official目录下，执行yarn

在webstorm里右击package.json-》show npm scripts；在npm面板中，双击start。

------------------------------------------------------------------------------------------------------------------------
mock数据 跟.roadhogrc.mock.js有关
------------------------------------------------------------------------------------------------------------------------
普通变量：小驼峰法（除第一个单词之外，其他单词首字母大写，比如testCondition）
组件变量：大驼峰法（每个单词的首字母大写，比如TestComponent）
什么是组件变量？
举例：
const TestComponent = (
      <div>某个组件</div>
      )
------------------------------------------------------------------------------------------------------------------------
组件state
1、结构尽量扁平化
比如
state:{a:1,b:2}
优于
state:{
data:{a:1,b:2}
}
2、不采用Immutable
因为Immutable会增加代码复杂度，且不是刚需。
3、修改引用类型时，先deepClone （注：Object.assign和解构赋值都是浅拷贝）
------------------------------------------------------------------------------------------------------------------------
避免使用js控制css布局
------------------------------------------------------------------------------------------------------------------------
小图标优先使用官方Icon组件 https://ant.design/components/icon-cn/
------------------------------------------------------------------------------------------------------------------------
对接接口的步骤
1、编辑urls.js
  2、页面js中调用request方法
注意：绝大多数场景下，不需要使用model。
------------------------------------------------------------------------------------------------------------------------
页面布局时，尽量使用含有loading属性的组件，比如Card。等待接口期间，会有个好的界面体验。
------------------------------------------------------------------------------------------------------------------------
涉及到组件的增删时，key属性必须定义。
可参考TreatPlan.js
------------------------------------------------------------------------------------------------------------------------
当组件Description的内容为空时，会有排版问题，所以要提供默认非空值，比如"无"
详见Office/Detail.js
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
